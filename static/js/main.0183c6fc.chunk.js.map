{"version":3,"sources":["serviceWorker.js","index.js","modules/Calculator.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","Calculator","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","isOperator","endsWithOperator","endsWithNegativeSign","clearStyle","background","operatorStyle","equalsStyle","position","height","bottom","props","state","currentVal","prevVal","formula","currentSign","lastClicked","maxDigitWarning","bind","handleOperators","handleEvaluate","initialize","handleDecimal","handleNumbers","this","setState","setTimeout","includes","expression","test","slice","replace","answer","Math","round","eval","toString","evaluated","e","value","target","length","className","Formula","Output","currentValue","Buttons","decimal","evaluate","numbers","operators","React","Component","id","onClick","style"],"mappings":"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","file":"static/js/main.0183c6fc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/css/index.css';\nimport Calculator from './modules/Calculator';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Calculator />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n","import React from 'react';\r\n\r\nconst isOperator = /[x/+-]/,\r\n  endsWithOperator = /[x+-/]$/,\r\n  endsWithNegativeSign = /\\d[x/+-]{1}-$/,\r\n  clearStyle = { background: \"linear-gradient(90deg, rgba(87,0,113,1) 0%, rgba(110,0,143,1) 50%, rgba(255,0,0,1) 100%)\" },\r\n  operatorStyle = { background: \"#666666\" },\r\n  equalsStyle = {\r\n    background: \"#004466\",\r\n    position: \"absolute\",\r\n    height: 129,\r\n    bottom: 5\r\n};\r\n\r\n\r\nclass Calculator extends React.Component {\r\n\r\n  constructor (props) {\r\n    super(props);\r\n    this.state = {\r\n      currentVal:\"0\",\r\n      prevVal:\"0\",\r\n      formula: \"\",\r\n      currentSign:\"pos\",\r\n      lastClicked: \"\"\r\n    };\r\n    this.maxDigitWarning = this.maxDigitWarning.bind(this);\r\n    this.handleOperators = this.handleOperators.bind(this);\r\n    this.handleEvaluate = this.handleEvaluate.bind(this);\r\n    this.initialize = this.initialize.bind(this);\r\n    this.handleDecimal = this.handleDecimal.bind(this);\r\n    this.handleNumbers = this.handleNumbers.bind(this); \r\n  }\r\n\r\n  maxDigitWarning() {\r\n    this.setState({\r\n      currentVal: \"You can't write more\",\r\n      prevVal: this.state.currentVal\r\n    });\r\n    setTimeout(() => this.setState({currentVal:\r\n    this.state.prevVal }), 1000);\r\n  }\r\n\r\n  handleEvaluate() {\r\n    if(!this.state.currentVal.includes(\"Limit\")){\r\n      let expression = this.state.formula;\r\n      while(endsWithOperator.test(expression)){\r\n        expression = expression.slice(0, -1);\r\n      }\r\n      expression = expression.replace(/x/g, \"*\")\r\n                             .replace(/-/g, \"-\")\r\n                             .replace('--', '+0+0+0+0+0+0+');\r\n\r\n      let answer = Math.round(1000000000000 * \r\n                        eval(expression))/ 1000000000000;\r\n                \r\n      this.setState({\r\n        currentVal: answer.toString(),\r\n        formula: expression.replace(/\\*/g, \"x\")\r\n                           .replace(/-/g, \"-\") \r\n                           .replace('+0+0+0+0+0+0+', '--')\r\n                           .replace(/(x|\\/|\\+)-/, '$1-')\r\n                           .replace(/^-/, '-'),\r\n        prevVal: answer,\r\n        evaluated: true\r\n      });\r\n    }\r\n  }\r\n\r\n  handleOperators(e) {\r\n    if(!this.state.currentVal.includes(\"Limit\")) {\r\n      const value = e.target.value;\r\n      const { formula, prevVal, evaluated } = this.state;\r\n      this.setState({\r\n        currentVal: value, \r\n        evaluated: false\r\n      });\r\n\r\n      if(evaluated){\r\n        this.setState({\r\n          formula: prevVal + value\r\n        });\r\n      }else if(!endsWithOperator.test(formula)){\r\n        this.setState({\r\n          prevVal: formula,\r\n          formula: formula + value\r\n        });\r\n      }else if(!endsWithNegativeSign.test(formula)){\r\n        this.setState({\r\n          formula: (endsWithNegativeSign.test(formula + value)?\r\n            formula : prevVal) + value\r\n        });\r\n      }else if(value !== \"-\") {\r\n        this.setState({\r\n          formula: prevVal + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleNumbers(e) {\r\n    if(!this.state.currentVal.includes(\"Limit\")) {\r\n      const { currentVal, formula, evaluated } = this.state;\r\n      const value = e.target.value;\r\n      this.setState({\r\n        evaluated: false\r\n      });\r\n      if(currentVal.length > 21) {\r\n        this.maxDigitWarning();\r\n      }else if(evaluated){\r\n        this.setState({\r\n          currentVal: value,\r\n          formula: value !== \"0\" ? value : \"\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          currentVal: \r\n            currentVal ===\"0\" || isOperator.test(currentVal)?\r\n            value : currentVal+value,\r\n          formula:\r\n            currentVal === \"0\" && value === \"0\" ?\r\n              formula === \"\" ?  value : formula\r\n              : /([^.0-9]0|^0)$/.test(formula) ?\r\n                formula.slice(0, -1) + value\r\n                :formula + value\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleDecimal() {\r\n    if (this.state.evaluated === true) {\r\n      this.setState({\r\n        currentVal: \"0.\",\r\n        formula: \"0.\",\r\n        evaluated: false\r\n      });\r\n    }else if (!this.state.currentVal.includes(\".\") &&\r\n              !this.state.currentVal.includes(\"Limit\") ) {\r\n      this.setState({\r\n        evaluated: false\r\n      });\r\n      if (this.state.currentVal.length > 21) {\r\n          this.maxDigitWarning();\r\n      }else if ( endsWithOperator.test(this.state.formula) || \r\n               ( this.state.currentVal === \"0\" && this.state.formula === \"\") ) {\r\n        this.setState({\r\n          currentVal: \"0.\",\r\n          formula: this.state.formula + \"0.\"\r\n        });\r\n      }else{\r\n        this.setState({\r\n          currentVal: this.state.formula.match(/(-?\\d+\\.?\\d*)$/)[0] + \".\",\r\n          formula: this.state.formula + \".\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  initialize() {\r\n    this.setState({\r\n      currentVal: \"0\",\r\n      prevVal: \"0\",\r\n      formula: \"\",\r\n      currentSign: \"pos\",\r\n      lastClicked: \"\",\r\n      evaluated: false\r\n    });\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"calculator\">\r\n          <Formula formula={this.state.formula.replace(/x/g, \"x\")} />\r\n          <Output currentValue={this.state.currentVal} />\r\n          <Buttons\r\n            decimal={this.handleDecimal}\r\n            evaluate={this.handleEvaluate}\r\n            initialize={this.initialize}\r\n            numbers={this.handleNumbers}\r\n            operators={this.handleOperators}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Buttons extends React.Component {\r\n  render () {\r\n    return (\r\n      <div>\r\n        <button \r\n          className=\"jumbo\"\r\n          id=\"clear\"\r\n          onClick={this.props.initialize}\r\n          style={clearStyle}\r\n          value=\"AC\"\r\n        >\r\n          AC\r\n        </button>\r\n        <button \r\n          id=\"divide\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n          value=\"/\"\r\n        >\r\n          /\r\n        </button>\r\n        <button \r\n          id=\"multiply\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n          value=\"x\"\r\n        >\r\n          x\r\n        </button>\r\n        <button \r\n          id=\"seven\"\r\n          onClick={this.props.numbers}\r\n          value=\"7\"\r\n        >\r\n          7\r\n        </button>\r\n        <button\r\n          id=\"eight\"\r\n          onClick={this.props.numbers}\r\n          value=\"8\"\r\n        >\r\n          8\r\n        </button>\r\n        <button\r\n          id=\"nine\"\r\n          onClick={this.props.numbers}\r\n          value=\"9\"\r\n        >\r\n          9\r\n        </button>\r\n        <button\r\n          id=\"subtract\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n          value=\"-\"\r\n        >\r\n          -\r\n        </button>\r\n        <button\r\n          id=\"four\"\r\n          onClick={this.props.numbers}\r\n          value=\"4\"\r\n        >\r\n          4\r\n        </button>\r\n        <button\r\n          id=\"five\"\r\n          onClick={this.props.numbers}\r\n          value=\"5\"\r\n        >\r\n          5\r\n        </button>\r\n        <button\r\n          id=\"six\"\r\n          onClick={this.props.numbers}\r\n          value=\"6\"\r\n        >\r\n          6\r\n        </button>\r\n        <button\r\n          id=\"add\"\r\n          onClick={this.props.operators}\r\n          style={operatorStyle}\r\n          value=\"+\"\r\n        >\r\n          +\r\n        </button>\r\n        <button\r\n          id=\"one\"\r\n          onClick={this.props.numbers}\r\n          value=\"1\"\r\n        >\r\n          1\r\n        </button>\r\n        <button\r\n          id=\"two\"\r\n          onClick={this.props.numbers}\r\n          value=\"2\"\r\n        >\r\n          2\r\n        </button>\r\n        <button\r\n          id=\"three\"\r\n          onClick={this.props.numbers}\r\n          value=\"3\"\r\n        >\r\n          3\r\n        </button>\r\n        <button \r\n          className=\"jumbo\"\r\n          id=\"zero\"\r\n          onClick={this.props.numbers}\r\n          value=\"0\"\r\n        >\r\n          0\r\n        </button>\r\n        <button\r\n          id=\"decimal\"\r\n          onClick={this.props.decimal}\r\n          value=\".\"\r\n        >\r\n          .\r\n        </button>\r\n        <button\r\n          id=\"equals\"\r\n          onClick={this.props.evaluate}\r\n          style={equalsStyle}\r\n          value=\"=\"\r\n        >\r\n          =\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Output extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className=\"outputScreen\" id=\"display\">\r\n        {this.props.currentValue}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Formula extends React.Component{\r\n  render(){\r\n    return(\r\n      <div className=\"formulaScreen\">\r\n        {this.props.formula}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;"],"sourceRoot":""}